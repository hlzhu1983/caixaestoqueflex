<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
	 layout="absolute" xmlns:inputs="utilidades.inputs.*"
	  height="522" title="Produto Pesquisa" width="722" 
	  creatingContentPane="{this.init()}" 
	  borderColor="#009DFF" xmlns:botoes="utilidades.botoes.*">

	<mx:Metadata>
		[Event(name='produtoSelecionadoEvent',type='events.ProdutoEvent')]
	</mx:Metadata>

	<mx:Script>
		<![CDATA[
			import mx.core.Application;
			import mx.events.ListEvent;
			import mx.events.ItemClickEvent;
			import events.ProdutoEvent;
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
			import negocio.vo.FornecedorVO;
			import negocio.vo.UnidadeVO;
			import negocio.vo.GrupoProdutoVO;
			import negocio.vo.LocalProdutoVO;
			import negocio.remote.Remote;
			import negocio.vo.ProdutoVO;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var itensUnidade:ArrayCollection;
			[Bindable]
			private var itensLocal:ArrayCollection;
			[Bindable]
			private var itensGrupo:ArrayCollection; 
			[Bindable]
			private var itensFornecedor:ArrayCollection; 
			
			[Bindable]
			private var itensProduto:ArrayCollection; 
			
			private var item:ProdutoVO;
			private var ro:Remote = Remote.getInstance();
			
			//array("descricao","referencia","precoVenda","codFornecedor","codLocal","codUnidade","codGrupo");
			private var sql:Array;
			
			
			private function init():void{
				//this.ro.
				
				
				this.sql = ["","","","","","",""];
				this.ro.listarFornecedor(preencheFornecedor);
				this.ro.listarUnidade(preencheCBUnidade);
				this.ro.listarGrupoProduto(preencheCBGrupo);
				this.ro.listarLocalProduto(preencheCBLocal);
			}
			
			private function preencheFornecedor(event:ResultEvent):void{
			 	var a:ArrayCollection = new ArrayCollection(event.result as Array);
				var l:FornecedorVO = new FornecedorVO();
			 	l.nome = "";
			 	a.addItemAt(l,0);
			 	this.itensFornecedor = a;
			}
			
			public function filtarFornecedor():void{
				if(this.cb_fornecedor.selectedIndex == 0){
					this.sql[3] = "";
				}else{
					this.sql[3] = "codFornecedor = '"+this.itensFornecedor.getItemAt(this.cb_fornecedor.selectedIndex).codigo+"'";
					this.ro.filtroProduto(resultListaProduto,sql);
				}
			}
			
			public function filtarUN():void{
				if(this.cb_unidade.selectedIndex == 0){
					this.sql[4] = "";
				}else{
					this.sql[4] = "codUnidade = '"+this.itensUnidade.getItemAt(this.cb_unidade.selectedIndex).codigo+"'";
					this.ro.filtroProduto(resultListaProduto,sql);
				}
			}
			
			public function filtarGrupo():void{
				if(this.cb_grupo.selectedIndex == 0){
					this.sql[5] = "";
				}else{
					this.sql[5] = "codGrupo = '"+this.itensGrupo.getItemAt(this.cb_grupo.selectedIndex).codigo+"'";
					this.ro.filtroProduto(resultListaProduto,sql);
				}
			}
			
			public function filtarLocal():void{
				if(this.cb_local.selectedIndex == 0){
					this.sql[6] = "";
				}else{
					this.sql[6] = "codLocal = '"+this.itensLocal.getItemAt(this.cb_local.selectedIndex).codigo+"'";
					this.ro.filtroProduto(resultListaProduto,sql);
				}
			}
			
			
			public function resultListaProduto(e:ResultEvent):void{
				this.itensProduto = new ArrayCollection(e.result as Array);
			}
			
			private function preencheCBUnidade(event:ResultEvent):void{
				 var a:ArrayCollection = new ArrayCollection(event.result as Array);
				var l:UnidadeVO = new UnidadeVO();
			 	l.descricao = "";
			 	a.addItemAt(l,0);
			 	this.itensUnidade = a;
			
			}
			private function preencheCBGrupo(event:ResultEvent):void{
			  	var a:ArrayCollection = new ArrayCollection(event.result as Array);
				var l:GrupoProdutoVO = new GrupoProdutoVO();
			 	l.descricao = "";
			 	a.addItemAt(l,0);
			 	this.itensGrupo = a;
			}
			private function preencheCBLocal(event:ResultEvent):void{
			 var a:ArrayCollection = new ArrayCollection(event.result as Array);
			 var l:LocalProdutoVO = new LocalProdutoVO();
			 l.descricao = "";
			 a.addItemAt(l,0);
			 this.itensLocal = a;
			}
			
			private function selecionarItem(event:ListEvent):void{
				if(event.rowIndex == -1){
					Alert.show("Produto não selecinado!","Ops!",4,this);
				}else{
					Application.application.dispatchEvent(new ProdutoEvent(event.itemRenderer.data as ProdutoVO,ProdutoEvent.PRODUTOSELECIONADO));
					PopUpManager.removePopUp(this);	
				}				
				
			}
			
			public function pesquisarProduto():void{
				
			}
			
		]]>
	</mx:Script>

		<mx:FormItem label="Descrição Produto: " horizontalAlign="left" x="20" y="22">
				<inputs:TextoInput  width="426" id="ti_descricao" />
		</mx:FormItem>
		<mx:FormItem label="Referência: " horizontalAlign="left" x="20" y="52">
			<inputs:TextoInput width="225" id="ti_referencia" />
		</mx:FormItem>
		<mx:FormItem label="Preço: " horizontalAlign="left" x="400" y="52">
			<inputs:NumberInput width="158" valorDefault="0,00" id="ti_precoVenda" />
		</mx:FormItem>
		<mx:Panel x="0" y="82" width="100%" height="155" layout="absolute" title="Filtros">
			<mx:Label text="Fornecedor: " y="12" x="19"/>
			<mx:ComboBox id="cb_fornecedor"  change="{this.filtarFornecedor()}" editable="false"  dataProvider="{this.itensFornecedor}" labelField="nome" x="102" y="10"/>
			<mx:Label text="Local:" x="468.5" y="14"/>
			<mx:ComboBox id="cb_local"  editable="true" change="{this.filtarLocal()}" dataProvider="{this.itensLocal}" labelField="descricao" x="514.5" y="12"/>
			<mx:Label text="Grupo:" x="292.5" y="55"/>
			<mx:ComboBox  id="cb_grupo" editable="true" change="{this.filtarGrupo()}" dataProvider="{this.itensGrupo}" labelField="descricao" x="343.5" y="53"/>
			<mx:Label text="Unidade:" x="19" y="57"/>
			<mx:ComboBox  id="cb_unidade" editable="true" change="{this.filtarUN()}" dataProvider="{this.itensUnidade}" labelField="descricao" x="83" y="55"/>
		</mx:Panel>
		
		<mx:DataGrid x="10" y="245" id="grid_produtos" dataProvider="{this.itensProduto}"
			 width="682" height="204" doubleClickEnabled="true" itemDoubleClick="{this.selecionarItem(event)}">
				<mx:columns>
					<mx:DataGridColumn headerText="Código" dataField="codigo"/>
					<mx:DataGridColumn headerText="Descrição" dataField="descricao"/>
					<mx:DataGridColumn headerText="Referência" dataField="referencia"/>
				</mx:columns>
			</mx:DataGrid>
		<botoes:BuscarButton  x="636" y="22" click="{this.pesquisarProduto()}"/>
</mx:TitleWindow>
