<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
	 layout="absolute" xmlns:ns1="utilidades.inputs.*" 
	 creationComplete="{this.listarAllItems()}"
	 title="Gerenciador Clientes" 
	 showCloseButton="true"
	 close="{this.fechar()}"
	 xmlns:botoes="utilidades.botoes.*" width="890" height="100%" xmlns:utilidades="utilidades.*">
	
		<mx:Script>
		<![CDATA[
			import mx.controls.DateField;
			import negocio.vo.ClienteVO;
			import mx.events.ValidationResultEvent;
			import mx.validators.ValidationResult;
			import negocio.vo.UnidadeVO;
			import mx.managers.PopUpManager;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import negocio.remote.Remote;
			
			[Bindable]
			private var itensArray:ArrayCollection;
			
			[Bindable]
			private var item:ClienteVO;
			
			[Bindable]
			private var estados:Array = new Array(
			{data:"PE", label: "PE"},
	        {data:"AC" ,label: "AC"},
			{data:"AL" ,label: "AL"},
			{data:"AP" ,label: "AP"},
			{data:"AM" ,label: "AM"},
			{data:"BA", label: "BA"},
			{data:"CE" ,label: "CE"},
			{data:"DF" ,label: "DF"},
			{data:"ES" ,label: "ES"},
			{data:"GO" ,label: "GO"},
			{data:"MA" ,label: "MA"},
			{data:"MG" ,label: "MG"},
			{data:"MT" ,label: "MT"},
			{data:"MS" ,label: "MS"},
			{data:"PA" ,label: "PA"},
			{data:"PB" ,label: "PB"},
			{data:"PR" ,label: "PR"},
			{data:"PI" ,label: "PI"},
			{data:"RJ" ,label: "RJ"},
			{data:"RN" ,label: "RN"},
			{data:"RS" ,label: "RS"},
			{data:"RO" ,label: "RO"},
			{data:"RR" ,label: "RR"},
			{data:"SC" ,label: "SC"},
			{data:"SP" ,label: "SP"},
			{data:"SE" ,label: "SE"},	
			{data:"TO" ,label: "TO"}
			);
			
			private var tipoPesquisa:String;
		
			private var ro:Remote = Remote.getInstance();
			
			private function init():void{
				this.listarAllItems();
			}
			
			private function addItem():void{
				var u:ClienteVO = new ClienteVO();
				if(this.ti_nome.validador.validate().type == ValidationResultEvent.INVALID){
					Alert.show("Campo nome obrigatorio!","Ops!");
				}else{
					u.nome = this.ti_nome.text;
					u.bairro = this.ti_bairro.text;
					u.cep = this.ti_cep.text;
					u.cidade = this.ti_cidade.text;
					u.contato = this.ti_contato.text;
					u.cpf_cnpj = this.ti_cpf_cnpj.text;
					u.dataCadastro = useDate(this.dataCadastro.selectedDate);
					u.dataNascimento = useDate(this.dataNascimento.selectedDate);
					u.email = this.ti_email.text;
					u.endereco = this.ti_endereco.text;
					u.fone = this.ti_fone.text;
					u.insc_estadual = this.ti_inscEstadual.text;
					u.obs = this.obs.text;
					u.sexo = this.sexo.selectedItem.data;
					u.tipoPessoa = this.tipoUsuario.selectedItem.data;
					u.UF = this.estado.selectedItem.data;
					u.url = this.ti_url.text;
					this.ro.addCliente(resultadoAddItem,u);
				}
			}
			
			 private function useDate(date:Date):String{
	            if (date == null) {
	                return this.useDate(new Date());
	            }
				return date.getFullYear() + "-"+ (date.getMonth() + 1) +"-"+date.date;
       		 }
			
			private function resultadoAddItem(event:ResultEvent):void{
				this.itensArray.addItem(event.result);
				Alert.show("O item foi adicionado!","Sucesso!");
				this.limparCampos();
			}
			
			
			private function listarAllItems():void{
				this.ro.listarCliente(resultListarItens);
				
			}
			
			private function resultListarItens(event:ResultEvent):void{
								
				this.itensArray = new ArrayCollection(event.result as Array);
				
			}
			
			public function itemSelecionado(event:Event):void{
				this.item = event.currentTarget.selectedItem as ClienteVO;
				this.ti_bairro.text = this.item.bairro;
				this.ti_cep.text = this.item.cep;
				this.ti_cidade.text = this.item.cidade;
				this.ti_codigo.text = this.item.codigo.toString();
				this.ti_contato.text = this.item.contato;
				this.ti_cpf_cnpj.text = this.item.cpf_cnpj;
				this.ti_email.text = this.item.email;
				this.ti_endereco.text = this.item.endereco;
				this.ti_fone.text = this.item.fone;
				this.ti_inscEstadual.text = this.item.insc_estadual;
				this.ti_nome.text = this.item.nome;
				this.ti_url.text = this.item.url;
				this.tipoUsuario.selectedIndex = this.item.tipoPessoa;
				this.sexo.selectedIndex =  this.item.sexo;
				this.remover.enabled = true;
				this.selecionarItem(this.item.UF);
				this.dataCadastro.data = this.item.getDataCadastro();
				this.dataNascimento.data = this.item.getDataNascimento();
                						
			} 
			
			
			
	
			private function removerItem():void{
				this.item = this.grid_itens.selectedItem as ClienteVO;
				this.ro.removerCliente(resultadoRemoverUnidade, this.item);
				
				
			}
			
			private function resultadoRemoverUnidade(event:ResultEvent):void{
				if(event.result){
					Alert.show("O item foi removido!","Sucesso");
					this.itensArray.removeItemAt(this.grid_itens.selectedIndex);
				}else{
					Alert.show("O item não pôde ser removido!","Ops!");					
				}
				this.limparCampos();
			}
			
			
			
			private function pesquisarItem():void{
				if(this.ti_pesquisa.text == ""){
					this.listarAllItems();
				}else if(this.ti_pesquisa.validador.validate().type == ValidationResultEvent.VALID ){
					
					if(this.radio_codigo.selected){
						this.ro.pesquisarCliente(resultadoPesquisaItem,this.ti_pesquisa.text,"codigo");
					}else if(this.radio_nome.selected){
						this.ro.pesquisarCliente(resultadoPesquisaItem,this.ti_pesquisa.text,"nome");
					}else if(this.radio_cpf_cnpj.selected){
						this.ro.pesquisarCliente(resultadoPesquisaItem,this.ti_pesquisa.text,"cpf_cnpj");
					}else {
						this.ro.pesquisarCliente(resultadoPesquisaItem,this.ti_pesquisa.text,"endereco");
					}
					
				}else{
					Alert.show("erro");
				}
			}
			
			private function resultadoPesquisaItem(event:ResultEvent):void{
				this.itensArray = new ArrayCollection(event.result as Array);
			}
			
			
			private function fechar():void{
				PopUpManager.removePopUp(this);
			}
		
			public function limparCampos():void{
				this.ti_bairro.text = "";
				this.ti_cep.text = "";
				this.ti_cidade.text = "";
				this.ti_codigo.text = "";
				this.ti_contato.text = "";
				this.ti_cpf_cnpj.text = "";
				this.ti_email.text = "";
				this.ti_endereco.text = "";
				this.ti_fone.text = "";
				this.ti_inscEstadual.text = "";
				this.ti_nome.text = "";
				this.ti_pesquisa.text = "";
				this.ti_url.text = "";
				this.estado.selectedIndex = 0;
				this.tipoUsuario.selectedIndex = 0;
				this.sexo.selectedIndex = 0;
				this.ti_pesquisa.text = "";
				
			}  
			
			public function selecionarItem(label:String):void{
				var str:String = "";
				 for(var i:int = 0; i< this.estados.length;i++){
				 	str = this.estados[i]['label'];
				 	if(str == label){
				 		this.estado.selectedIndex = i;
				 	}
				 }
			}
			
		]]>
	</mx:Script>
		
	<mx:FormItem defaultButton="{this.bt_buscar}" label="Pesquisa" x="10" y="10"  width="624">
		<ns1:TextoInput x="10" y="10" requerido="true" width="225" id="ti_pesquisa"  isEnter="false"/>
		<mx:HBox width="100%" height="100%">
			<mx:RadioButtonGroup id="grupo_pesquisa"/>
			<mx:RadioButton label="Código" id="radio_codigo" groupName="grupo_pesquisa"/>
			<mx:RadioButton label="Nome" id="radio_nome" groupName="grupo_pesquisa" selected="true"/>
			<mx:RadioButton label="CPF/CNPJ" id="radio_cpf_cnpj" groupName="grupo_pesquisa" />
			<mx:RadioButton label="Endereço" id="radio_endereco" groupName="grupo_pesquisa" />
		</mx:HBox>
			
	</mx:FormItem>	
	<botoes:BuscarButton id="bt_buscar" x="312" y="10" click="{this.pesquisarItem()}"/>		
	<botoes:RemoveButton id="remover"   enabled="false" x="58" y="77" click="{this.removerItem()}" />
	<botoes:ADDButton id="add"  x="10" y="77" click="{this.addItem()}"/>
	<botoes:CleanButton  x="106" y="77" click="{this.limparCampos()}"/>
	
	<mx:ComboBox x="561" y="123" width="112" id="sexo" selectedIndex="0" editable="false">
		<mx:ArrayCollection>
         <mx:Object label="Masculino" data="M"/>
         <mx:Object label="Feminino" data="F"/>
      </mx:ArrayCollection>
	</mx:ComboBox>
	<mx:DataGrid id="grid_itens" x="10" y="400" width="847" dataProvider="{this.itensArray}" change="{this.itemSelecionado(event)}">
		<mx:columns>
			<mx:DataGridColumn headerText="Código: " dataField="codigo"/>
			<mx:DataGridColumn headerText="Nome: " dataField="nome"/>
			<mx:DataGridColumn headerText="Telefone: " dataField="fone"/>
			<mx:DataGridColumn headerText="Contato: " dataField="contato"/>
		</mx:columns>
	</mx:DataGrid>
	
	<utilidades:DateInput x="355" y="170"   showToday="true" id="dataNascimento" width="143"/>
	<utilidades:DateInput x="508" y="75" id="dataCadastro" showToday="true"/>
	<mx:Label x="355" y="153" text="Data Nascimento:"/>
	<mx:Label x="410" y="77" text="Data Cadastro:"/>
	
	<mx:ComboBox x="242" y="75" id="tipoUsuario" selectedIndex="0" editable="false">
		<mx:ArrayCollection>
         <mx:Object label="Fisica" data="0"/>
         <mx:Object label="Jurídica" data="1"/>
      </mx:ArrayCollection>
	</mx:ComboBox>
	<mx:Label x="154" y="77" text="Tipo Usuário:"/>
	<mx:Label x="154" y="105" text="Nome:"/>
	<mx:Label x="10" y="202" text="Email:"/>
	<mx:Label x="187" y="153" text="Contato:"/>
	<mx:Label x="10" y="296" text="Observações:"/>
	<mx:Label x="252" y="202" text="URL:"/>
	<mx:Label x="10" y="153" text="Fone:"/>
	<mx:Label x="204" y="249" text="Insc. Estadual:"/>
	<mx:Label x="10" y="249" text="CPF/CNPJ:"/>
	<mx:Label x="561" y="103" text="Sexo:" id="lb_sexo"/>
	<ns1:TextoInput id="ti_nome" width="399" requerido="true" x="154" y="123"/>
	<mx:Label x="10" y="107" text="Codigo:"/>
	<mx:Label id="ti_codigo" width="136" x="10" y="125" height="20"/>
	<ns1:InteiroInput id="ti_cpf_cnpj"  width="185" x="11" y="266"/>
	<ns1:InteiroInput id="ti_inscEstadual" width="201" x="204" y="266"/>
	<ns1:InteiroInput id="ti_fone" width="169" x="10" y="170"/>
	<ns1:TextoInput id="ti_contato"  x="187" y="170"/>
	<ns1:TextoInput x="10" y="219" id="ti_email"  width="234"/>
	<ns1:TextoInput x="252" y="219" id="ti_url" width="240"/>
	<mx:TextArea x="10" y="311" width="490" height="85"/>
	<mx:Panel x="506" y="153" width="351" height="239" layout="absolute" title="Endereço">
		<mx:ComboBox x="10" y="113" id="estado" selectedIndex="0" editable="false" dataProvider="{this.estados}">
			
		</mx:ComboBox>
		<mx:Label x="10" y="97" text="UF:"/>
		<ns1:TextoInput id="ti_endereco" width="308" x="10" y="20"/>
		<mx:Label x="10" y="0" text="Rua/Logradouro:"/>
		<ns1:InteiroInput id="ti_cep" x="178" y="67" width="140"/>
		<mx:Label x="178" y="50" text="Cep:"/>
		<mx:Label x="10" y="50" text="Bairro:"/>
		<ns1:TextoInput id="ti_bairro"  x="10" y="67"/>
		<ns1:TextoInput id="ti_cidade"  x="62" y="113" width="256"/>
		<mx:Label x="62" y="97" text="Cidade:"/>
	</mx:Panel>
			
	
</mx:TitleWindow>
