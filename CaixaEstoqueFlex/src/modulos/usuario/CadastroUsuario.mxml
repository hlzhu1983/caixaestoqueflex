<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" close="fechar()" creationComplete="init()" showCloseButton="true" layout="absolute" title="Gerenciamento Usuarios" xmlns:utilidades="utilidades.*" xmlns:botoes="utilidades.botoes.*" xmlns:inputs="utilidades.inputs.*">
	
	<mx:Script>
		<![CDATA[
			import mx.events.ValidationResultEvent;
			import mx.validators.ValidationResult;
			import negocio.vo.UsuarioVO;
			import mx.managers.PopUpManager;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import negocio.remote.Remote;
			
			[Bindable]
			private var usuariosArray:ArrayCollection;
			
			[Bindable]
			private var usuario:UsuarioVO;
			
			private var tipoPesquisa:String;
		
			private var ro:Remote = Remote.getInstance();
			
			private function init():void{
				this.listarAllUsuarios();
			}
			
			private function addUsuario():void{
				var u:UsuarioVO = new UsuarioVO();
				if(this.descInput.validador.validate().type == ValidationResultEvent.INVALID){
					Alert.show("Campo descrição obrigatorio!","Ops!");
				}else{
					u.descricao = this.descInput.text;
					this.ro.addUsuario(resultadoAddUsuario,u);
				}
				
				
			}
			
			private function resultadoAddUsuario(event:ResultEvent):void{
				this.usuariosArray.addItem(event.result);
				Alert.show("O item foi adicionado!","Sucesso!");
				this.limparCampos();
			}
			
			private function listarAllUsuarios():void{
				this.ro.listarUsuario(resultListarUsuarios);
				
			}
			
			private function resultListarUsuarios(event:ResultEvent):void{
								
				this.usuariosArray = new ArrayCollection(event.result as Array);
				
			}
			
			public function usuarioSelecionado(event:Event):void{
				this.usuario = event.currentTarget.selectedItem;
				this.codInput.text = this.usuario.codigo.toString();
				this.descInput.text = this.usuario.descricao;
                this.remover.enabled = true;
                						
			}
			
			
			
			
			private function removerUsuario():void{
				this.usuario = this.usuarioGrid.selectedItem as UsuarioVO;
				this.ro.removerUsuario(resultadoRemoverUsuario, this.usuario);
				
				
			}
			
			private function resultadoRemoverUsuario(event:ResultEvent):void{
				if(event.result){
					Alert.show("O item foi removido!","Sucesso");
					this.usuariosArray.removeItemAt(this.usuarioGrid.selectedIndex);
				}else{
					Alert.show("O item não pôde ser removido!","Ops!");					
				}
				this.limparCampos();
			}
			
			
			private function pesquisarItem():void{
				if(this.ti_pesquisa.text == ""){
					this.listarAllUsuarios();
				}else if(this.ti_pesquisa.validador.validate().type == ValidationResultEvent.VALID ){
					if(this.radio_codigo.selected){
						this.ro.pesquisarUsuario(resultadoPesquisaItem,this.ti_pesquisa.text,"codigo");
					}else{
						this.ro.pesquisarUsuario(resultadoPesquisaItem,this.ti_pesquisa.text,"descricao");
					}
					
				}else{
					Alert.show("erro");
				}
			}
			
			private function resultadoPesquisaItem(event:ResultEvent):void{
				this.usuariosArray = new ArrayCollection(event.result as Array);
			}
			
			
			
			private function fechar():void{
				PopUpManager.removePopUp(this);
			}
			
			public function limparCampos():void{
				this.codInput.text = "";
				this.descInput.text = "";
				this.ti_pesquisa.text = "";
				this.usuarioGrid.selectedIndex = -1;
			}
			
		]]>
	</mx:Script>
	


	<mx:FormItem defaultButton="{this.bt_buscar}" label="Pesquisa" x="10" y="10" >
		<inputs:TextoInput x="10" y="10" width="225" id="ti_pesquisa"  isEnter="false"/>
		<mx:HBox width="100%" height="100%">
			<mx:RadioButtonGroup id="grupo_pesquisa"/>
			<mx:RadioButton label="Código" id="radio_codigo" groupName="grupo_pesquisa"/>
			<mx:RadioButton label="Descrição" id="radio_desc" groupName="grupo_pesquisa" selected="true"/>
		</mx:HBox>
			
	</mx:FormItem>	
	<botoes:BuscarButton id="bt_buscar" x="312" y="10" click="{this.pesquisarItem()}"/>		
		<mx:FormItem label="Código" x="10" y="80" >		
			<mx:Label id="codInput"/>
		</mx:FormItem>
		<botoes:RemoveButton id="remover" click="removerUsuario()"  enabled="false" x="140" y="140"/>
		<botoes:ADDButton id="add" click="addUsuario()" x="92" y="140"/>
		<botoes:CleanButton  x="188" y="140" click="{this.limparCampos()}"/>
		<mx:FormItem label="Descrição" x="10" y="110" required="true">
			<inputs:TextoInput id="descInput" requerido="true"/>
		</mx:FormItem>
		<mx:DataGrid x="0" y="169" width="388" id="usuarioGrid" change="{usuarioSelecionado(event)}" dataProvider="{this.usuariosArray}">
			<mx:columns>
				<mx:DataGridColumn headerText="Código" dataField="codigo"/>
				<mx:DataGridColumn headerText="Nome" dataField="descricao"/>			
			</mx:columns>
		</mx:DataGrid>
		
	
</mx:TitleWindow>
