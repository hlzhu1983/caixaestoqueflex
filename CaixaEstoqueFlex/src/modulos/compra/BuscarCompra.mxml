<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow  xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
	width="604" height="484" title="Procurar Compras"
	xmlns:utilidades="utilidades.*" fontSize="12" close="fechar()" showCloseButton="true"
	backgroundAlpha="1.0" xmlns:inputs="utilidades.inputs.*" 
	xmlns:botoes="utilidades.botoes.*" xmlns:local="*" creationComplete="init()" alpha="1.0" borderColor="#D2D2D2" xmlns:prevenda="modulos.prevenda.*" cornerRadius="12">
	
	<mx:Script
	>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.events.ListEvent;
			import events.CompraEvent;
			import negocio.vo.CompraVO;
			import negocio.vo.FornecedorVO;
			import mx.containers.Form;
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.rpc.events.ResultEvent;
			import negocio.remote.Remote;
			import mx.collections.ArrayCollection;
		
		[Bindable]
		private var ro:Remote = Remote.getInstance();
		[Bindable] 
		private var itensFornecedores:ArrayCollection;
		[Bindable] 
		private var itensFornecedoresT:ArrayCollection;
		[Bindable]
		
		[Bindable] 
		private var itensView:ArrayCollection;
		private var itensCompra:ArrayCollection;
		private var adicionou:ArrayCollection;
		    
		    private function init():void{
				this.ro.parent = this;
				this.limpar();
				
				
				this.focusManager.setFocus(this.ti_pesquisa);
				this.listarFornecedores();
			}
			
			public function listarFornecedores():void{
			this.ro.listarFornecedor(resultadoFornecedor);
			}
			
			private function resultadoFornecedor(event:ResultEvent):void
			{this.itensFornecedoresT = event.result as ArrayCollection;
			
			}
			private function limpar():void{
				this.ti_pesquisa.text = "";
				this.itensFornecedores = new ArrayCollection();
				this.itensCompra = new ArrayCollection();
				this.dataFinal.text = "";
				this.dataInicial.text = "";
				this.dataCompra.text = "";
				this.produtos.selectedIndex = -1;
				
			}
			private function fechar():void{
				PopUpManager.removePopUp(this);
			}
		private function listarAllItems():void{
				this.ro.listarCompra(resultListarItens);
				
			}
				//private function resultadoPesquisaItem(event:ResultEvent):void{
				//this.itensCompra = event.result as ArrayCollection;
			//}
			
			 private function resultadoPesquisaFornecedor(event:ResultEvent):void{
		    
		      var a:ArrayCollection = event.result as ArrayCollection;
		     if(a.length!=0){
		     var forn:FornecedorVO = a.getItemAt(0) as FornecedorVO;
		     for(var i:int=0;i<this.itensCompra.length;i++){
		     var comp:CompraVO = this.itensCompra.getItemAt(i) as CompraVO;
		     
		     if(comp.codFornecedor==forn.codigo){
		    
		     var view:ViewCompra = new ViewCompra();
		       
		        view.codigo = comp.codigo;
				view.dataCompra = comp.dataCompra;
				view.NF = comp.NF;
				view.fornecedor = forn.nome;
				
				if(!this.adicionou.contains(view.codigo)){
				this.itensView.addItem(view);
				this.adicionou.addItem(view.codigo);
				}
		     }
		     }
		     
		     }else{
		     
		     }
		       
		     	
			
		    }
		
		
		
			private function resultListarItens(event:ResultEvent):void{
				this.itensCompra = event.result as ArrayCollection;
			 	
				this.itensFornecedores = new ArrayCollection();
				this.adicionou = new ArrayCollection();
				this.itensView = new ArrayCollection();

				for(var i:int=0;i<this.itensCompra.length;i++){
				var comp:CompraVO = this.itensCompra.getItemAt(i) as CompraVO;	
				  
				this.ro.pesquisarFornecedor(resultadoPesquisaFornecedor,""+comp.codFornecedor,"codigo");
			
				
				}
				
				
				
			
			}
		  
			private function pesquisarItem():void{
				if(this.ti_pesquisa.text == ""){
					this.listarAllItems();
				}else if(this.ti_pesquisa.validador.validate().type == ValidationResultEvent.VALID ){
					
					if(this.radio_codigo.selected){
						this.ro.pesquisarCompra(resultListarItens,this.ti_pesquisa.text,"codigo");
					}else if(this.radio_NF.selected){
						this.ro.pesquisarCompra(resultListarItens,this.ti_pesquisa.text,"NF");
					}
					
				}else{
					Alert.show("erro");
				}
			}
			
			private function pesquisarPorData():void{
				if(this.dataCompra.text!=""){	
						this.ro.pesquisarCompra(resultListarItens,this.dataCompra.text,"dataCompra");
					
				}else{
					Alert.show("erro");
				}
			}
			private function pesquisarPorIntervalo():void{
				if(this.dataInicial.text!=""){
						if(this.dataFinal.text!=""){
						this.ro.pesquisarCompra(resultListarItens,this.dataInicial.text+"#"+this.dataFinal.text,"dataIntervalo");
				}else{
					Alert.show("erro");
				}	
				}else{
					Alert.show("erro");
				}
			}
			
			private function pesquisarPorFornecedor():void{
			
				if(this.cb_fornecedor.selectedIndex!=-1){	
						this.ro.pesquisarCompra(resultListarItens,(this.itensFornecedoresT.getItemAt(this.cb_fornecedor.selectedIndex) as FornecedorVO).codigo+"","codFornecedor");
					
				}else{
					Alert.show("Erro");
				}
			}
			private function selecionarItem(event:ListEvent):void{
				 
				if(event.rowIndex == -1){
					Alert.show("Produto não selecinado!","Ops!",4,this);					
				}else{
					var i:int = event.rowIndex;
					this.dispatchEvent(new CompraEvent(this.itensCompra.getItemAt(i) as CompraVO,CompraEvent.COMPRASELECIONADA));
					this.fechar();	
				}				
				
			}
			
		]]>
		
	</mx:Script>	
	<mx:Label text="Pesquisa:" x="24" y="19" fontSize="12"/>
	<inputs:TextoInput enter="{this.pesquisarItem()}"  id="ti_pesquisa" requerido="true"   isEnter="false" x="99" y="12" fontSize="12" width="204"/>
	<botoes:BuscarButton  x="311" y="10" click="{this.pesquisarItem()}" height="27"/>
	<mx:HBox width="283" height="22" x="24" y="44">
		<mx:RadioButtonGroup id="grupo_pesquisa"/>
		<mx:RadioButton label="Código" id="radio_codigo" groupName="grupo_pesquisa"/>
		<mx:RadioButton label="N° da Nota" id="radio_NF" groupName="grupo_pesquisa" selected="true"/>
	</mx:HBox>
	<mx:Panel x="5" y="74" width="574" height="156" layout="absolute" title="Filtros">
		<mx:Label text="Fornecedor: " y="12" x="19"/>
		<mx:ComboBox id="cb_fornecedor"   editable="false" selectedIndex="-1"  dataProvider="{this.itensFornecedoresT}" labelField="nome" x="102" y="10" width="168" enabled="true" change="{this.pesquisarPorFornecedor()}"/>
		<mx:Label text="Data Compra:" x="300" y="13"/>
		<mx:Label text="à" x="226" y="61"/>
		<mx:Label text="Intervalo:" x="19" y="61"/>
		<utilidades:DateInput change="{this.pesquisarPorData()}"   x="401" y="11" width="124" id="dataCompra"/>
		<utilidades:DateInput  x="94" y="59" width="124" id="dataInicial"/>
		<utilidades:DateInput  x="256" y="59" width="124" id="dataFinal"/>
		<botoes:BuscarButton  x="401" y="57" click="{this.pesquisarPorIntervalo()}" height="27" width="124"/>
	</mx:Panel>
	<mx:DataGrid id="produtos"  width="568" doubleClickEnabled="true"  itemDoubleClick="{this.selecionarItem(event)}"  height="171" rowCount="10" dataProvider="{this.itensView}" x="6" y="261">
		<mx:columns>
			<mx:DataGridColumn width="53" headerText="código" dataField="codigo"/>
			<mx:DataGridColumn width="83" headerText="N° da Nota" dataField="NF"/>
			<mx:DataGridColumn headerText="Fornecedor" dataField="fornecedor"/>					
			<mx:DataGridColumn width="112" headerText="data de Entrada" dataField="dataCompra"/>
		</mx:columns>
	</mx:DataGrid>
</mx:TitleWindow>
